name: Tests

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run Tests
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    env:
      PROJECT_NAME_UNDERSCORE: nostr
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
        package:
          - directory: ./relay
            name: relay
          - directory: ./client
            name: client
          - directory: ./nostr-sdk
            name: nostr-sdk

    steps:
    # Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Setup Toolchain
    - name: Setup Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true

    # Build 
    - name: Build
      working-directory: ${{ matrix.package.directory }}
      run: cargo build $CARGO_OPTIONS

    # Cache
    - name: Configure cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: test-${{ runner.os }}-cargo-${{ matrix.rust }}-project-${{ matrix.package.directory }}-${{ hashFiles('**/Cargo.lock') }}

    # Tests
    - name: Run tests
      working-directory: ${{ matrix.package.directory }}
      run: |
        cargo test --tests
        cargo test --doc

    # Coverage
    ##! CARGO_INCREMENTAL, RUSTFLAGS, RUSTDOCFLAGS - added to CARGO_OPTIONS in cargo test needed for code coverage
    - name: Generate test result and coverage report
      working-directory: ${{ matrix.package.directory }}
      run: |
        find . -name '*.gcda' -delete
        cargo install grcov --force;
        cargo test $CARGO_OPTIONS --tests;
        zip -0 ccov.zip `find . \( -name "$PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
        grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o ${{ matrix.package.name }}.info;
        cat ${{ matrix.package.name }}.info >> final_coverage.info

    # Upload to CodeCov
    - name: Upload to CodeCov
      uses: codecov/codecov-action@v3
      with:
        files: ./final_coverage.info
        fail_ci_if_error: true